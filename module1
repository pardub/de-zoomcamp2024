* Question 1: --rm

* Question 2: 0.42.0

* Question 3 :  How many taxi trips were totally made on September 18th 2019 ?

SELECT COUNT(*) AS total_trips
FROM "green_taxi_data"
WHERE DATE("lpep_pickup_datetime") = '2019-09-18'
AND DATE("lpep_dropoff_datetime") = '2019-09-18';

answer :  15612

* Question 4 :  Which was the pick up day with the largest trip distance Use the pick up time for your calculations.

SELECT DATE(lpep_pickup_datetime) AS pickup_date, SUM(trip_distance) AS total_distance
FROM green_taxi_data
WHERE DATE(lpep_pickup_datetime) IN ('2019-09-18', '2019-09-16', '2019-09-26', '2019-09-21')
GROUP BY pickup_date
ORDER BY total_distance DESC
LIMIT 1;

answer : 2019-09-26


* Question 5 : Consider lpep_pickup_datetime in '2019-09-18' and ignoring Borough has Unknown. Which were the 3 pick up Boroughs that had a sum of total_amount superior to 50000 ?

SELECT z."Borough", SUM(g."total_amount") AS total_revenue
FROM "green_taxi_data" g
JOIN "zones" z ON g."PULocationID" = z."LocationID"
WHERE DATE(g."lpep_pickup_datetime") = '2019-09-18'
  AND z."Borough" != 'Unknown'
GROUP BY z."Borough"
HAVING SUM(g."total_amount") > 50000
ORDER BY total_revenue DESC
LIMIT 3;

Answer:
Brooklyn	96333.2400000004
Manhattan	92271.3000000008
Queens	78671.7100000003

* Question 6 : For the passengers picked up in September 2019 in the zone name Astoria which was the drop off zone that had the largest tip ? We want the name of the zone, not the id.

SELECT dropoff_zone."Zone" AS dropoff_zone_name, MAX(g."tip_amount") AS largest_tip
FROM "green_taxi_data" g
JOIN "zones" pickup_zone ON g."PULocationID" = pickup_zone."LocationID"
JOIN "zones" dropoff_zone ON g."DOLocationID" = dropoff_zone."LocationID"
WHERE pickup_zone."Zone" = 'Astoria'
  AND DATE(g."lpep_pickup_datetime") >= '2019-09-01'
  AND DATE(g."lpep_pickup_datetime") < '2019-10-01'
GROUP BY dropoff_zone."Zone"
ORDER BY largest_tip DESC
LIMIT 1;

Answer: JFK Airport	62.31

* Question 7:  terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/google from the dependency lock file
- Using previously-installed hashicorp/google v5.12.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

